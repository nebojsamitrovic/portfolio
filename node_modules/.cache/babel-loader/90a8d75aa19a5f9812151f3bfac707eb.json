{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', 'minimist'], factory);else if ('undefined' != typeof exports) factory(exports, require('minimist'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.minimist), global.parse = mod.exports;\n  }\n})(this, function (exports, _minimist) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.default = function (argv, options) {\n    Object.assign(this.config, options), this.config.help && (this.option('help', 'Output usage information'), this.command('help', 'Display help', this.showHelp)), this.raw = (0, _minimist2.default)(argv.slice(1), this.config.minimist), this.config.version && this.checkVersion(this.parent);\n    var subCommand = this.raw._[1],\n        helpTriggered = this.raw.h || this.raw.help,\n        args = {},\n        defined = this.isDefined(subCommand, 'commands'),\n        optionList = this.getOptions(defined);\n    return (Object.assign(args, this.raw), args._.shift(), this.sub = args._, defined) ? (this.runCommand(defined, optionList), {}) : (this.config.help && helpTriggered && this.showHelp(), optionList);\n  };\n\n  var _minimist2 = function (obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }(_minimist);\n});","map":{"version":3,"sources":["../../../src/js/args/parse.js"],"names":["Object","argv","subCommand","helpTriggered","args","defined","optionList"],"mappings":";;;;;;;;;;;;wBAEe,UAAA,IAAA,EAAA,OAAA,EAAyB;AAEtCA,IAAAA,MAAAA,CAAAA,MAAAA,CAAc,KAAdA,MAAAA,EAFsC,OAEtCA,GAEI,KAAA,MAAA,CAJkC,IAIlC,KAEF,KAAA,MAAA,CAAA,MAAA,EANoC,0BAMpC,GACA,KAAA,OAAA,CAAA,MAAA,EAAA,cAAA,EAAqC,KAPD,QAOpC,CAHE,CAFJA,EASA,KAAA,GAAA,GAAW,CAAA,GAAA,UAAA,CAAA,OAAA,EAAOC,IAAAA,CAAAA,KAAAA,CAAP,CAAOA,CAAP,EAAsB,KAAA,MAAA,CAXK,QAW3B,CATXD,EAYI,KAAA,MAAA,CAdkC,OAclC,IACF,KAAA,YAAA,CAAkB,KAfkB,MAepC,CAbFA;AAgBA,QAAME,UAAAA,GAAa,KAAA,GAAA,CAAA,CAAA,CAAnB,CAAmB,CAAnB;AAAA,QACMC,aAAAA,GAAgB,KAAA,GAAA,CAAA,CAAA,IAAc,KAAA,GAAA,CADpC,IAAA;AAAA,QAGMC,IAAAA,GAHN,EAAA;AAAA,QAIMC,OAAAA,GAAU,KAAA,SAAA,CAAA,UAAA,EAJhB,UAIgB,CAJhB;AAAA,QAKMC,UAAAA,GAAa,KAAA,UAAA,CALnB,OAKmB,CALnB;AAlBsC,WAAA,CAyBtCN,MAAAA,CAAAA,MAAAA,CAAAA,IAAAA,EAAoB,KAzBkB,GAyBtCA,GACAI,IAAAA,CAAAA,CAAAA,CA1BsC,KA0BtCA,EADAJ,EAIA,KAAA,GAAA,GAAWI,IAAAA,CA7B2B,CAyBtCJ,EAzBsC,OAAA,KAiCpC,KAAA,UAAA,CAAA,OAAA,EAjCoC,UAiCpC,GAjCoC,EAAA,KAuClC,KAAA,MAAA,CAAA,IAAA,IAvCkC,aAuClC,IACF,KAxCoC,QAwCpC,EADE,EAvCkC,UAAA,CAAA","sourcesContent":["import parser from 'minimist';\n\nexport default function (argv, options) {\n  // Override default option values\n  Object.assign(this.config, options);\n\n  if (this.config.help) {\n    // Register default options and commands\n    this.option('help', 'Output usage information');\n    this.command('help', 'Display help', this.showHelp);\n  }\n\n  // Parse arguments using minimist\n  this.raw = parser(argv.slice(1), this.config.minimist);\n\n  // If default version is allowed, check for it\n  if (this.config.version) {\n    this.checkVersion(this.parent);\n  }\n\n  const subCommand = this.raw._[1];\n  const helpTriggered = this.raw.h || this.raw.help;\n\n  const args = {};\n  const defined = this.isDefined(subCommand, 'commands');\n  const optionList = this.getOptions(defined);\n\n  Object.assign(args, this.raw);\n  args._.shift();\n\n  // Export sub arguments of command\n  this.sub = args._;\n\n  // If sub command is defined, run it\n  if (defined) {\n    this.runCommand(defined, optionList);\n    return {};\n  }\n\n  // Show usage information if \"help\" or \"h\" option was used\n  // And respect the option related to it\n  if (this.config.help && helpTriggered) {\n    this.showHelp();\n  }\n\n  // Hand back list of options\n  return optionList;\n}\n"]},"metadata":{},"sourceType":"script"}