{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['module', 'exports', './parse', './example', './examples', './options', './option', './command', './help', './utils'], factory);else if ('undefined' != typeof exports) factory(module, exports, require('./parse'), require('./example'), require('./examples'), require('./options'), require('./option'), require('./command'), require('./help'), require('./utils'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, mod.exports, global.parse, global.example, global.examples, global.options, global.option, global.command, global.help, global.utils), global.index = mod.exports;\n  }\n})(this, function (module, exports, _parse, _example, _examples, _options, _option, _command, _help, _utils) {\n  'use strict';\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function Args() {\n    this.details = {\n      commands: [],\n      options: [],\n      examples: []\n    }, this.config = {\n      help: !0,\n      usageFilter: null,\n      value: null,\n      name: null,\n      mainColor: 'yellow',\n      subColor: 'dim'\n    }, this.printMainColor = function (i) {\n      return i;\n    }, this.printSubColor = function (i) {\n      return i;\n    }, this.parent = module.parent;\n  }\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.default = Args;\n\n  var _parse2 = _interopRequireDefault(_parse),\n      _example2 = _interopRequireDefault(_example),\n      _examples2 = _interopRequireDefault(_examples),\n      _options2 = _interopRequireDefault(_options),\n      _option2 = _interopRequireDefault(_option),\n      _command2 = _interopRequireDefault(_command),\n      _help2 = _interopRequireDefault(_help),\n      _utils2 = _interopRequireDefault(_utils),\n      publicMethods = {\n    command: _command2.default,\n    option: _option2.default,\n    options: _options2.default,\n    parse: _parse2.default,\n    example: _example2.default,\n    examples: _examples2.default,\n    showHelp: _help2.default\n  };\n\n  for (var util in _utils2.default) ({}).hasOwnProperty.call(_utils2.default, util) && (Args.prototype[util] = _utils2.default[util]);\n\n  for (var method in publicMethods) ({}).hasOwnProperty.call(publicMethods, method) && (Args.prototype[method] = publicMethods[method]);\n});","map":{"version":3,"sources":["../../../src/js/args/index.js"],"names":["publicMethods","command","option","options","parse","example","examples","showHelp","Args","commands","help","usageFilter","value","name","mainColor","subColor","module","parent"],"mappings":";;;;;;;;;;;;;;AAmBe;;AAAA,WAAA,IAAA,GAAgB;AAC7B,SAAA,OAAA,GAAe;AACbS,MAAAA,QAAAA,EADa,EAAA;AAEbN,MAAAA,OAAAA,EAFa,EAAA;AAGbG,MAAAA,QAAAA,EAJ2B;AACd,KAAf,EAOA,KAAA,MAAA,GAAc;AACZI,MAAAA,IAAAA,EAAAA,CADY,CAAA;AAEZC,MAAAA,WAAAA,EAFY,IAAA;AAGZC,MAAAA,KAAAA,EAHY,IAAA;AAIZC,MAAAA,IAAAA,EAJY,IAAA;AAKZC,MAAAA,SAAAA,EALY,QAAA;AAMZC,MAAAA,QAAAA,EAd2B;AAQf,KAPd,EAgBA,KAAA,cAAA,GAAsB,UAAA,CAAA,EAAA;AAAA,aAAA,CAAA;AAjBO,KAC7B,EAiBA,KAAA,aAAA,GAAqB,UAAA,CAAA,EAAA;AAAA,aAAA,CAAA;AAlBQ,KAC7B,EAmBA,KAAA,MAAA,GAAcC,MAAAA,CAAOC,MAnBrB;;;;;wBADsBT,I;;;;;;;;;;MAVlBR,aAAAA,GAAgB;AACpBC,IAAAA,OAAAA,EAAAA,SAAAA,CADoB,OAAA;AAEpBC,IAAAA,MAAAA,EAAAA,QAAAA,CAFoB,OAAA;AAGpBC,IAAAA,OAAAA,EAAAA,SAAAA,CAHoB,OAAA;AAIpBC,IAAAA,KAAAA,EAAAA,OAAAA,CAJoB,OAAA;AAKpBC,IAAAA,OAAAA,EAAAA,SAAAA,CALoB,OAAA;AAMpBC,IAAAA,QAAAA,EAAAA,UAAAA,CANoB,OAAA;AAOpBC,IAAAA,QAAAA,EAAAA,MAAAA,CAPoB;AAAA,G;;AAkCtB,OAAK,IAAL,IAAA,IAAA,OAAA,CAAA,OAAA,EACO,CAAA,EAAA,EAAA,cAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EADP,IACO,MAILC,IAAAA,CAAAA,SAAAA,CAAAA,IAAAA,IAAuB,OAAA,CAAA,OAAA,CALzB,IAKyB,CAJlB;;AAQP,OAAK,IAAL,MAAA,IAAA,aAAA,EACO,CAAA,EAAA,EAAA,cAAA,CAAA,IAAA,CAAA,aAAA,EADP,MACO,MAILA,IAAAA,CAAAA,SAAAA,CAAAA,MAAAA,IAAyBR,aAAAA,CAL3B,MAK2BA,CAJpB","sourcesContent":["import parse from './parse';\nimport example from './example';\nimport examples from './examples';\nimport options from './options';\nimport option from './option';\nimport command from './command';\nimport showHelp from './help';\nimport utils from './utils';\n\nconst publicMethods = {\n  command,\n  option,\n  options,\n  parse,\n  example,\n  examples,\n  showHelp,\n};\n\nexport default function Args() {\n  this.details = {\n    commands: [],\n    options: [],\n    examples: [],\n  };\n\n  // Configuration defaults\n  this.config = {\n    help: true,\n    usageFilter: null,\n    value: null,\n    name: null,\n    mainColor: 'yellow',\n    subColor: 'dim',\n  };\n\n  this.printMainColor = i => i;\n  this.printSubColor = i => i;\n\n  this.parent = module.parent;\n}\n\n// Assign internal helpers\nfor (const util in utils) {\n  if (!{}.hasOwnProperty.call(utils, util)) {\n    continue; // eslint-disable-line\n  }\n\n  Args.prototype[util] = utils[util];\n}\n\n// Assign public methods\nfor (const method in publicMethods) {\n  if (!{}.hasOwnProperty.call(publicMethods, method)) {\n    continue; // eslint-disable-line\n  }\n\n  Args.prototype[method] = publicMethods[method];\n}\n"]},"metadata":{},"sourceType":"script"}