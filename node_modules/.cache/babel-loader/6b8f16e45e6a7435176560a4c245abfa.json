{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t(require(\"react\")) : \"function\" == typeof define && define.amd ? define([\"react\"], t) : (e = e || self).ReactSlideToggle = t(e.React);\n}(this, function (e) {\n  \"use strict\";\n\n  function t(e, t) {\n    for (var a = 0; a < t.length; a++) {\n      var s = t[a];\n      s.enumerable = s.enumerable || !1, s.configurable = !0, \"value\" in s && (s.writable = !0), Object.defineProperty(e, s.key, s);\n    }\n  }\n\n  function a(e, t, a) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: a,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = a, e;\n  }\n\n  function s(e) {\n    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n      return e.__proto__ || Object.getPrototypeOf(e);\n    })(e);\n  }\n\n  function o(e, t) {\n    return (o = Object.setPrototypeOf || function (e, t) {\n      return e.__proto__ = t, e;\n    })(e, t);\n  }\n\n  function n(e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }\n\n  e = e && e.hasOwnProperty(\"default\") ? e.default : e;\n\n  var r = \"undefined\" != typeof window ? window : global,\n      l = r.requestAnimationFrame ? r.requestAnimationFrame.bind(r) : function (e) {\n    return r.setTimeout(e, 16);\n  },\n      i = r.cancelAnimationFrame ? r.cancelAnimationFrame.bind(r) : r.clearInterval.bind(r),\n      p = Object.freeze({\n    EXPANDED: \"EXPANDED\",\n    COLLAPSED: \"COLLAPSED\",\n    EXPANDING: \"EXPANDING\",\n    COLLAPSING: \"COLLAPSING\"\n  }),\n      g = function (e) {\n    return e < .5 ? 4 * e * e * e : .5 * Math.pow(2 * e - 2, 3) + 1;\n  },\n      u = {\n    isMoving: function (e) {\n      return e === p.EXPANDING || e === p.COLLAPSING;\n    },\n    clamp: function (e) {\n      var t = e.value,\n          a = e.max,\n          s = void 0 === a ? 1 : a,\n          o = e.min,\n          n = void 0 === o ? 0 : o;\n      return t > s ? s : t < n ? n : t;\n    },\n    now: function () {\n      return Date.now();\n    },\n    sanitizeDuration: function (e) {\n      return Math.max(0, parseInt(+e, 10) || 0);\n    },\n    interpolate: function (e) {\n      var t = e.next,\n          a = e.prev,\n          s = Math.abs(t - a),\n          o = t;\n      return s > .15 && (t > a ? o -= .75 * s : o += .75 * s), o;\n    }\n  },\n      c = function (e) {\n    function r() {\n      var e, t;\n      !function (e, t) {\n        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n      }(this, r);\n\n      for (var o = arguments.length, i = new Array(o), g = 0; g < o; g++) i[g] = arguments[g];\n\n      return t = function (e, t) {\n        return !t || \"object\" != typeof t && \"function\" != typeof t ? n(e) : t;\n      }(this, (e = s(r)).call.apply(e, [this].concat(i))), a(n(t), \"_state_\", {\n        collapsibleElement: null,\n        toggleState: t.props.collapsed ? p.COLLAPSED : p.EXPANDED\n      }), a(n(t), \"GET_HEIGHT\", t.props.offsetHeight ? \"offsetHeight\" : \"scrollHeight\"), a(n(t), \"state\", {\n        toggleState: t._state_.toggleState,\n        hasReversed: !1,\n        range: t.props.collapsed ? 0 : 1,\n        progress: t.props.collapsed ? 0 : 1\n      }), a(n(t), \"getCollapsible\", function () {\n        return t._state_.collapsibleElement;\n      }), a(n(t), \"updateCollapsible\", function (e, a) {\n        t.getCollapsible() && (t._state_.collapsibleElement.style[e] = a);\n      }), a(n(t), \"setCollapsibleElement\", function (e) {\n        t._state_.collapsibleElement = e, t._state_.collapsibleElement && !t.props.noOverflowHidden && (t._state_.collapsibleElement.style.overflow = \"hidden\"), t._state_.toggleState === p.COLLAPSED && t.setCollapsedState({\n          initialState: !0\n        });\n      }), a(n(t), \"toggle\", function () {\n        if (!t.props.irreversible || !u.isMoving(t._state_.toggleState)) {\n          var e = function () {\n            t.props.onCollapsing && t.props.onCollapsing({\n              range: t.state.range,\n              progress: t.state.progress,\n              hasReversed: t.state.hasReversed\n            }), t.collapse();\n          },\n              a = function () {\n            t.props.onExpanding && t.props.onExpanding({\n              range: t.state.range,\n              progress: t.state.progress,\n              hasReversed: t.state.hasReversed\n            }), t.expand();\n          },\n              s = function (e) {\n            var a = e.toggleState,\n                s = e.display,\n                o = e.hasReversed;\n            t._state_.toggleState = a, t._state_.hasReversed = !!o, void 0 === s || t.props.noDisplayStyle || t.updateCollapsible(\"display\", s);\n            var n = u.now();\n\n            if (o) {\n              var r = t._state_.startTime,\n                  l = u.sanitizeDuration(t.props.duration),\n                  i = Math.min(l, n - r),\n                  p = Math.max(0, l - i);\n              t._state_.startTime = n - p;\n            } else {\n              var g = t.getCollapsible();\n              g && g.style.height && t.updateCollapsible(\"height\", null), t._state_.boxHeight = g ? g[t.GET_HEIGHT] : 0, t._state_.startTime = n, t._state_.startDirection = a;\n            }\n\n            t.setState({\n              toggleState: t._state_.toggleState,\n              hasReversed: t._state_.hasReversed\n            });\n          };\n\n          switch (t._state_.toggleState) {\n            case p.EXPANDED:\n              s({\n                toggleState: p.COLLAPSING\n              }), e();\n              break;\n\n            case p.COLLAPSED:\n              s({\n                toggleState: p.EXPANDING,\n                display: \"\"\n              }), a();\n              break;\n\n            case p.EXPANDING:\n              s({\n                toggleState: p.COLLAPSING,\n                hasReversed: !0\n              }), e();\n              break;\n\n            case p.COLLAPSING:\n              s({\n                toggleState: p.EXPANDING,\n                display: \"\",\n                hasReversed: !0\n              }), a();\n          }\n        }\n      }), a(n(t), \"setExpandedState\", function () {\n        t._state_.progress = 1, t._state_.toggleState = p.EXPANDED, t.updateCollapsible(\"height\", null), t.setState({\n          toggleState: p.EXPANDED,\n          range: 1,\n          progress: t._state_.progress\n        }), t.props.onExpanded && t.props.onExpanded({\n          hasReversed: t.state.hasReversed\n        });\n      }), a(n(t), \"expand\", function () {\n        if (t._state_.toggleState === p.EXPANDING) {\n          var e = u.sanitizeDuration(t.props.duration);\n          if (e <= 0) t.setExpandedState();else {\n            var a = t._state_.startTime,\n                s = Math.min(e, u.now() - a);\n            if (s >= e) t.setExpandedState();else {\n              var o,\n                  n = t._state_,\n                  r = n.startDirection,\n                  l = n.toggleState,\n                  i = n.boxHeight,\n                  g = u.clamp({\n                value: s / e\n              });\n              o = t.props.whenReversedUseBackwardEase && r !== l ? 1 - t.props.easeCollapse(1 - g) : t.props.easeExpand(g), t.props.bestPerformance || t.setState({\n                range: g,\n                progress: o\n              }), t.props.interpolateOnReverse && t._state_.hasReversed && (o = u.interpolate({\n                next: o,\n                prev: t._state_.progress\n              }));\n              var c = Math.round(i * o);\n              t._state_.progress = o, t.updateCollapsible(\"height\", \"\".concat(c, \"px\")), t.nextTick(t.expand);\n            }\n          }\n        }\n      }), a(n(t), \"setCollapsedState\", function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            a = e.initialState;\n        t._state_.progress = 0, t._state_.toggleState = p.COLLAPSED, t.props.noDisplayStyle ? t.updateCollapsible(\"height\", \"0px\") : (t.updateCollapsible(\"display\", \"none\"), t.updateCollapsible(\"height\", null)), t.setState({\n          toggleState: p.COLLAPSED,\n          range: 0,\n          progress: t._state_.progress\n        }), !a && t.props.onCollapsed && t.props.onCollapsed({\n          hasReversed: t.state.hasReversed\n        });\n      }), a(n(t), \"collapse\", function () {\n        if (t._state_.toggleState === p.COLLAPSING) {\n          var e = u.sanitizeDuration(t.props.duration);\n          if (e <= 0) t.setCollapsedState();else {\n            var a = t._state_.startTime,\n                s = Math.min(e, u.now() - a);\n            if (s >= e) t.setCollapsedState();else {\n              var o,\n                  n = t._state_,\n                  r = n.startDirection,\n                  l = n.boxHeight,\n                  i = n.toggleState,\n                  g = 1 - u.clamp({\n                value: s / e\n              }),\n                  c = t.props,\n                  d = c.whenReversedUseBackwardEase,\n                  h = c.easeExpand,\n                  _ = c.easeCollapse;\n              o = d && r !== i ? h(g) : 1 - _(1 - g), t.props.bestPerformance || t.setState({\n                range: g,\n                progress: o\n              }), t.props.interpolateOnReverse && t._state_.hasReversed && (o = u.interpolate({\n                next: o,\n                prev: t._state_.progress\n              }));\n              var f = Math.round(l * o);\n              t._state_.progress = o, t._state_.timeout = t.nextTick(t.collapse), t.updateCollapsible(\"height\", \"\".concat(f, \"px\"));\n            }\n          }\n        }\n      }), a(n(t), \"nextTick\", function (e) {\n        t._state_.timeout = l(e);\n      }), t;\n    }\n\n    var g, c, d;\n    return function (e, t) {\n      if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n      e.prototype = Object.create(t && t.prototype, {\n        constructor: {\n          value: e,\n          writable: !0,\n          configurable: !0\n        }\n      }), t && o(e, t);\n    }(r, e), g = r, (c = [{\n      key: \"render\",\n      value: function () {\n        var e = {\n          onToggle: this.toggle,\n          toggle: this.toggle,\n          setCollapsibleElement: this.setCollapsibleElement,\n          toggleState: this.state.toggleState,\n          hasReversed: this.state.hasReversed,\n          isMoving: u.isMoving(this.state.toggleState),\n          range: this.state.range,\n          progress: this.state.progress\n        };\n        return \"function\" == typeof this.props.children ? this.props.children(e) : this.props.render ? this.props.render(e) : this.props.children;\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function () {\n        this.props.onMount && this.props.onMount({\n          toggleState: this.state.toggleState,\n          toggle: this.toggle\n        });\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function (e, t) {\n        this.props.collapseEvent && this.props.collapseEvent > e.collapseEvent && (this._state_.toggleState !== p.EXPANDED && this._state_.toggleState !== p.EXPANDING || this.toggle()), this.props.expandEvent && this.props.expandEvent > e.expandEvent && (this._state_.toggleState !== p.COLLAPSED && this._state_.toggleState !== p.COLLAPSING || this.toggle()), this.props.toggleEvent && this.props.toggleEvent > e.toggleEvent && this.toggle();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function () {\n        this.props.onUnmount && this.props.onUnmount({\n          toggleState: this.state.toggleState\n        }), this._state_.timeout && i(this._state_.timeout);\n      }\n    }]) && t(g.prototype, c), d && t(g, d), r;\n  }(e.Component);\n\n  return a(c, \"defaultProps\", {\n    duration: 300,\n    easeCollapse: g,\n    easeExpand: g\n  }), c;\n});","map":{"version":3,"sources":["../src/library/SlideToggle.js"],"names":["root","window","global","rAF","requestAnimationFrame","bind","setTimeout","callback","cAF","cancelAnimationFrame","clearInterval","TOGGLE","Object","freeze","EXPANDED","COLLAPSED","EXPANDING","COLLAPSING","easeInOutCubic","t","Math","pow","util","isMoving","toggleState","clamp","value","max","min","now","Date","sanitizeDuration","parseInt","duration","interpolate","next","prev","diff","abs","interpolated","SlideToggle","React","Component","easeCollapse","easeExpand","collapsibleElement","_this","props","collapsed","offsetHeight","_state_","hasReversed","range","progress","data","onToggle","this","toggle","setCollapsibleElement","state","children","render","attr","getCollapsible","style","element","noOverflowHidden","overflow","setCollapsedState","initialState","irreversible","invokeCollapsing","onCollapsing","collapse","invokeExpanding","onExpanding","expand","updateInternalState","display","undefined","noDisplayStyle","updateCollapsible","startTime","elapsedTime","subtract","collapsible","height","boxHeight","GET_HEIGHT","startDirection","setState","onExpanded","setExpandedState","whenReversedUseBackwardEase","bestPerformance","interpolateOnReverse","currentHeightValue","round","nextTick","onCollapsed","timeout","onMount","prevProps","prevState","collapseEvent","expandEvent","toggleEvent","onUnmount"],"mappings":"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","sourcesContent":["/*\r\n  _state_ is internal state for sync and rendering control.\r\n  setState is async and I need sync control because timing is important\r\n  and because I need to control what is to be re-rendered.\r\n*/\r\n\r\nimport React from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\n// Support browser or node env\r\nconst root = typeof window !== 'undefined' ? window : global;\r\nconst rAF = root.requestAnimationFrame\r\n  ? root.requestAnimationFrame.bind(root)\r\n  : callback => root.setTimeout(callback, 16);\r\nconst cAF = root.cancelAnimationFrame\r\n  ? root.cancelAnimationFrame.bind(root)\r\n  : root.clearInterval.bind(root);\r\n\r\nconst TOGGLE = Object.freeze({\r\n  EXPANDED: 'EXPANDED',\r\n  COLLAPSED: 'COLLAPSED',\r\n  EXPANDING: 'EXPANDING',\r\n  COLLAPSING: 'COLLAPSING',\r\n});\r\n\r\nconst easeInOutCubic = t =>\r\n  t < 0.5 ? 4 * t * t * t : 0.5 * Math.pow(2 * t - 2, 3) + 1;\r\n\r\nconst util = {\r\n  isMoving: toggleState =>\r\n    toggleState === TOGGLE.EXPANDING || toggleState === TOGGLE.COLLAPSING,\r\n  clamp: ({ value, max = 1, min = 0 }) => {\r\n    if (value > max) return max;\r\n    if (value < min) return min;\r\n    return value;\r\n  },\r\n  now: () => Date.now(),\r\n  sanitizeDuration: duration => Math.max(0, parseInt(+duration, 10) || 0),\r\n  interpolate: ({ next, prev }) => {\r\n    /*\r\n      If the diff in the next rAF is big, it can seem jumpy when reversing the toggling\r\n      This is heuristic approach to minimize the diff value by interpolating.\r\n    */\r\n    const diff = Math.abs(next - prev);\r\n    let interpolated = next;\r\n    if (diff > 0.15) {\r\n      /* heuristic value */\r\n      if (next > prev) interpolated -= diff * 0.75;\r\n      /* heuristic value */ else\r\n        interpolated += diff * 0.75; /* heuristic value */\r\n    }\r\n    return interpolated;\r\n  },\r\n};\r\n\r\nexport default class SlideToggle extends React.Component {\r\n  static defaultProps = {\r\n    duration: 300,\r\n    easeCollapse: easeInOutCubic,\r\n    easeExpand: easeInOutCubic,\r\n  };\r\n\r\n  // Internal state\r\n  _state_ = {\r\n    collapsibleElement: null,\r\n    toggleState: this.props.collapsed ? TOGGLE.COLLAPSED : TOGGLE.EXPANDED,\r\n  };\r\n\r\n  GET_HEIGHT = this.props.offsetHeight ? 'offsetHeight' : 'scrollHeight';\r\n\r\n  // React state\r\n  state = {\r\n    toggleState: this._state_.toggleState,\r\n    hasReversed: false,\r\n    range: this.props.collapsed ? 0 : 1,\r\n    progress: this.props.collapsed ? 0 : 1,\r\n  };\r\n\r\n  render() {\r\n    const data = {\r\n      onToggle: this.toggle, // deprecated\r\n      toggle: this.toggle,\r\n      setCollapsibleElement: this.setCollapsibleElement,\r\n      toggleState: this.state.toggleState,\r\n      hasReversed: this.state.hasReversed,\r\n      isMoving: util.isMoving(this.state.toggleState),\r\n      range: this.state.range,\r\n      progress: this.state.progress,\r\n    };\r\n\r\n    if (typeof this.props.children === 'function')\r\n      return this.props.children(data);\r\n    if (this.props.render) return this.props.render(data);\r\n\r\n    return this.props.children;\r\n  }\r\n\r\n  getCollapsible = () => this._state_.collapsibleElement;\r\n\r\n  updateCollapsible = (attr, value) => {\r\n    if (this.getCollapsible()) {\r\n      this._state_.collapsibleElement.style[attr] = value;\r\n    }\r\n  };\r\n\r\n  setCollapsibleElement = element => {\r\n    this._state_.collapsibleElement = element;\r\n    if (this._state_.collapsibleElement && !this.props.noOverflowHidden) {\r\n      this._state_.collapsibleElement.style.overflow = 'hidden';\r\n    }\r\n    if (this._state_.toggleState === TOGGLE.COLLAPSED) {\r\n      this.setCollapsedState({ initialState: true });\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    if (this.props.irreversible && util.isMoving(this._state_.toggleState)) {\r\n      return;\r\n    }\r\n\r\n    const invokeCollapsing = () => {\r\n      this.props.onCollapsing &&\r\n        this.props.onCollapsing({\r\n          range: this.state.range,\r\n          progress: this.state.progress,\r\n          hasReversed: this.state.hasReversed,\r\n        });\r\n\r\n      this.collapse();\r\n    };\r\n    const invokeExpanding = () => {\r\n      this.props.onExpanding &&\r\n        this.props.onExpanding({\r\n          range: this.state.range,\r\n          progress: this.state.progress,\r\n          hasReversed: this.state.hasReversed,\r\n        });\r\n\r\n      this.expand();\r\n    };\r\n\r\n    const updateInternalState = ({ toggleState, display, hasReversed }) => {\r\n      this._state_.toggleState = toggleState;\r\n      this._state_.hasReversed = !!hasReversed;\r\n\r\n      if (display !== undefined && !this.props.noDisplayStyle) {\r\n        this.updateCollapsible('display', display);\r\n      }\r\n\r\n      const now = util.now();\r\n\r\n      if (hasReversed) {\r\n        const { startTime } = this._state_;\r\n        const duration = util.sanitizeDuration(this.props.duration);\r\n        const elapsedTime = Math.min(duration, now - startTime);\r\n        const subtract = Math.max(0, duration - elapsedTime);\r\n        this._state_.startTime = now - subtract;\r\n      } else {\r\n        const collapsible = this.getCollapsible();\r\n        if (collapsible && collapsible.style.height) {\r\n          this.updateCollapsible('height', null);\r\n        }\r\n        this._state_.boxHeight = collapsible ? collapsible[this.GET_HEIGHT] : 0;\r\n        this._state_.startTime = now;\r\n        this._state_.startDirection = toggleState;\r\n      }\r\n\r\n      this.setState({\r\n        toggleState: this._state_.toggleState,\r\n        hasReversed: this._state_.hasReversed,\r\n      });\r\n    };\r\n\r\n    switch (this._state_.toggleState) {\r\n      case TOGGLE.EXPANDED:\r\n        updateInternalState({ toggleState: TOGGLE.COLLAPSING });\r\n        invokeCollapsing();\r\n        break;\r\n      case TOGGLE.COLLAPSED:\r\n        updateInternalState({\r\n          toggleState: TOGGLE.EXPANDING,\r\n          display: '',\r\n        });\r\n        invokeExpanding();\r\n        break;\r\n      case TOGGLE.EXPANDING:\r\n        updateInternalState({\r\n          toggleState: TOGGLE.COLLAPSING,\r\n          hasReversed: true,\r\n        });\r\n        invokeCollapsing();\r\n        break;\r\n      case TOGGLE.COLLAPSING:\r\n        updateInternalState({\r\n          toggleState: TOGGLE.EXPANDING,\r\n          display: '',\r\n          hasReversed: true,\r\n        });\r\n        invokeExpanding();\r\n        break;\r\n    }\r\n  };\r\n\r\n  setExpandedState = () => {\r\n    this._state_.progress = 1;\r\n    this._state_.toggleState = TOGGLE.EXPANDED;\r\n    this.updateCollapsible('height', null);\r\n    this.setState({\r\n      toggleState: TOGGLE.EXPANDED,\r\n      range: 1,\r\n      progress: this._state_.progress,\r\n    });\r\n    if (this.props.onExpanded) {\r\n      this.props.onExpanded({\r\n        hasReversed: this.state.hasReversed,\r\n      });\r\n    }\r\n  };\r\n\r\n  expand = () => {\r\n    if (this._state_.toggleState !== TOGGLE.EXPANDING) {\r\n      return;\r\n    }\r\n\r\n    const duration = util.sanitizeDuration(this.props.duration);\r\n    if (duration <= 0) {\r\n      this.setExpandedState();\r\n      return;\r\n    }\r\n\r\n    const { startTime } = this._state_;\r\n    const elapsedTime = Math.min(duration, util.now() - startTime);\r\n\r\n    if (elapsedTime >= duration) {\r\n      this.setExpandedState();\r\n    } else {\r\n      const { startDirection, toggleState, boxHeight } = this._state_;\r\n      const range = util.clamp({ value: elapsedTime / duration });\r\n\r\n      let progress;\r\n      if (\r\n        this.props.whenReversedUseBackwardEase &&\r\n        startDirection !== toggleState\r\n      ) {\r\n        progress = 1 - this.props.easeCollapse(1 - range);\r\n      } else {\r\n        progress = this.props.easeExpand(range);\r\n      }\r\n\r\n      if (!this.props.bestPerformance) {\r\n        this.setState({\r\n          range,\r\n          progress,\r\n        });\r\n      }\r\n\r\n      if (this.props.interpolateOnReverse && this._state_.hasReversed) {\r\n        progress = util.interpolate({\r\n          next: progress,\r\n          prev: this._state_.progress,\r\n        });\r\n      }\r\n\r\n      const currentHeightValue = Math.round(boxHeight * progress);\r\n      this._state_.progress = progress;\r\n      this.updateCollapsible('height', `${currentHeightValue}px`);\r\n      this.nextTick(this.expand);\r\n    }\r\n  };\r\n\r\n  setCollapsedState = ({ initialState } = {}) => {\r\n    this._state_.progress = 0;\r\n    this._state_.toggleState = TOGGLE.COLLAPSED;\r\n\r\n    if (!this.props.noDisplayStyle) {\r\n      this.updateCollapsible('display', 'none');\r\n      this.updateCollapsible('height', null);\r\n    } else {\r\n      this.updateCollapsible('height', '0px');\r\n    }\r\n\r\n    this.setState({\r\n      toggleState: TOGGLE.COLLAPSED,\r\n      range: 0,\r\n      progress: this._state_.progress,\r\n    });\r\n    if (!initialState && this.props.onCollapsed)\r\n      this.props.onCollapsed({\r\n        hasReversed: this.state.hasReversed,\r\n      });\r\n  };\r\n\r\n  collapse = () => {\r\n    if (this._state_.toggleState !== TOGGLE.COLLAPSING) {\r\n      return;\r\n    }\r\n    const duration = util.sanitizeDuration(this.props.duration);\r\n    if (duration <= 0) {\r\n      this.setCollapsedState();\r\n      return;\r\n    }\r\n\r\n    const { startTime } = this._state_;\r\n    const elapsedTime = Math.min(duration, util.now() - startTime);\r\n\r\n    if (elapsedTime >= duration) {\r\n      this.setCollapsedState();\r\n    } else {\r\n      const { startDirection, boxHeight, toggleState } = this._state_;\r\n      const range = 1 - util.clamp({ value: elapsedTime / duration });\r\n\r\n      const {\r\n        whenReversedUseBackwardEase,\r\n        easeExpand,\r\n        easeCollapse,\r\n      } = this.props;\r\n\r\n      let progress;\r\n      if (whenReversedUseBackwardEase && startDirection !== toggleState) {\r\n        progress = easeExpand(range);\r\n      } else {\r\n        progress = 1 - easeCollapse(1 - range);\r\n      }\r\n\r\n      if (!this.props.bestPerformance) {\r\n        this.setState({\r\n          range,\r\n          progress,\r\n        });\r\n      }\r\n\r\n      if (this.props.interpolateOnReverse && this._state_.hasReversed) {\r\n        progress = util.interpolate({\r\n          next: progress,\r\n          prev: this._state_.progress,\r\n        });\r\n      }\r\n\r\n      const currentHeightValue = Math.round(boxHeight * progress);\r\n      this._state_.progress = progress;\r\n      this._state_.timeout = this.nextTick(this.collapse);\r\n      this.updateCollapsible('height', `${currentHeightValue}px`);\r\n    }\r\n  };\r\n\r\n  nextTick = callback => {\r\n    this._state_.timeout = rAF(callback);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onMount &&\r\n      this.props.onMount({\r\n        toggleState: this.state.toggleState,\r\n        toggle: this.toggle,\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.collapseEvent &&\r\n      this.props.collapseEvent > prevProps.collapseEvent\r\n    ) {\r\n      if (\r\n        this._state_.toggleState === TOGGLE.EXPANDED ||\r\n        this._state_.toggleState === TOGGLE.EXPANDING\r\n      ) {\r\n        this.toggle();\r\n      }\r\n    }\r\n    if (\r\n      this.props.expandEvent &&\r\n      this.props.expandEvent > prevProps.expandEvent\r\n    ) {\r\n      if (\r\n        this._state_.toggleState === TOGGLE.COLLAPSED ||\r\n        this._state_.toggleState === TOGGLE.COLLAPSING\r\n      ) {\r\n        this.toggle();\r\n      }\r\n    }\r\n    if (\r\n      this.props.toggleEvent &&\r\n      this.props.toggleEvent > prevProps.toggleEvent\r\n    ) {\r\n      this.toggle();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnmount &&\r\n      this.props.onUnmount({\r\n        toggleState: this.state.toggleState,\r\n      });\r\n    this._state_.timeout && cAF(this._state_.timeout);\r\n  }\r\n}\r\n\r\n// SlideToggle.propTypes = {\r\n//   render: PropTypes.func,\r\n//     children: PropTypes.func,\r\n//     duration: PropTypes.number,\r\n//     irreversible: PropTypes.bool,\r\n//     whenReversedUseBackwardEase: PropTypes.bool,\r\n//     noDisplayStyle: PropTypes.bool,\r\n//     noOverflowHidden: PropTypes.bool,\r\n//     bestPerformance: PropTypes.bool,\r\n//     interpolateOnReverse: PropTypes.bool,\r\n//     easeCollapse: PropTypes.func,\r\n//     easeExpand: PropTypes.func,\r\n//     collapsed: PropTypes.bool,\r\n//     onExpanded: PropTypes.func,\r\n//     onExpanding: PropTypes.func,\r\n//     onCollapsed: PropTypes.func,\r\n//     onCollapsing: PropTypes.func,\r\n//     scrollHeight: PropTypes.bool,\r\n// }\r\n"]},"metadata":{},"sourceType":"script"}