{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', 'react', 'react-object-inspector', 'platform'], factory);else if ('undefined' != typeof exports) factory(exports, require('react'), require('react-object-inspector'), require('platform'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.React, global.reactObjectInspector, global.platform), global.utils = mod.exports;\n  }\n})(this, function (exports, _react, _reactObjectInspector, _platform) {\n  'use strict';\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.handleLogging = function (method, addToOutput) {\n    console[method] = function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];\n\n      try {\n        var _console;\n\n        (_console = console).oldLog.apply(_console, ['[' + method + ']'].concat(args));\n      } catch (e) {\n        throw new Error('Terminal was loaded more than once check script tags');\n      }\n\n      var res = [].concat(args).slice(0, 15).map(function (arg, i) {\n        switch ('undefined' == typeof arg ? 'undefined' : _typeof(arg)) {\n          case 'object':\n            return _react2.default.createElement(_reactObjectInspector2.default, {\n              data: arg,\n              key: 'object-' + i\n            });\n\n          case 'function':\n            return '' + arg;\n\n          default:\n            return arg;\n        }\n      });\n      addToOutput(res);\n    }, Object.defineProperty(console[method], 'name', {\n      value: method,\n      writable: !1\n    });\n  }, exports.isServer = function () {\n    return !('undefined' != typeof window && window.document);\n  }, exports.getOs = function () {\n    var os = _platform2.default.os;\n    return null !== os.family && 0 === os.family.indexOf('Windows') ? 'win' : null !== os.family && -1 < linuxPlatforms.indexOf(os.family) ? 'linux' : null !== os.family && -1 < darwinPlatforms.indexOf(os.family) ? 'darwin' : 'unknown';\n  };\n\n  var _react2 = _interopRequireDefault(_react),\n      _reactObjectInspector2 = _interopRequireDefault(_reactObjectInspector),\n      _platform2 = _interopRequireDefault(_platform),\n      _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && 'function' == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n\n  (function () {\n    console.oldLog = console.log;\n  })();\n\n  var linuxPlatforms = ['Ubuntu', 'Debian', 'Fedora', 'Red Hat', 'SuSE', 'Android'],\n      darwinPlatforms = ['OS X', 'iOS'];\n});","map":{"version":3,"sources":["../../src/js/utils.js"],"names":["console","handleLogging","args","res","addToOutput","Object","value","writable","isServer","window","linuxPlatforms","darwinPlatforms","getOs","os"],"mappings":";;;;;;;;;;;;;;;;;;cAYgBC,a,GAAT,UAAA,MAAA,EAAA,WAAA,EAA4C;AAEjDD,IAAAA,OAAAA,CAAAA,MAAAA,CAAAA,GAAkB,YAAa;AAAA,WAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATE,IAAS,GAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAATA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;;AACpB,UAAI;AAAA,YAAA,QAAA;;AACF,SAAA,QAAA,GAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,MAAA,MAAA,GAAA,GAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AACA,OAFF,CAEE,OAAA,CAAA,EAAU;AACV,cAAM,IAAA,KAAA,CAAA,sDAAA,CAAN;AAEF;;AAAA,UAAMC,GAAAA,GAAM,GAAA,MAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAA2B,UAAA,GAAA,EAAA,CAAA,EAAY;AACjD,gBAAA,eAAA,OAAA,GAAA,GAAA,WAAA,GAAA,OAAA,CAAA,GAAA,CAAA;AACE,eAAA,QAAA;AACE,mBAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,OAAA,EAAA;AAAiB,cAAA,IAAA,EAAjB,GAAA;AAA4B,cAAA,GAAA,EAAA,YAAnC;AAAO,aAAA,CAAP;;AACF,eAAA,UAAA;AACE,mBAAA,KAAA,GAAA;;AACF;AACE,mBANJ,GAMI;AANJ;AADF,OAAY,CAAZ;AAUAC,MAAAA,WAAAA,CAAAA,GAAAA,CAAAA;AAlB+C,KAEjDJ,EAkBAK,MAAAA,CAAAA,cAAAA,CAAsBL,OAAAA,CAAtBK,MAAsBL,CAAtBK,EAAAA,MAAAA,EAA+C;AAAEC,MAAAA,KAAAA,EAAF,MAAA;AAAiBC,MAAAA,QAAAA,EAAAA,CAAhEF;AAA+C,KAA/CA,CAlBAL;aAqBcQ,Q,GAAT,YAAoB;AACzB,WAAO,EAAE,eAAA,OAAA,MAAA,IAAiCC,MAAAA,CAAnC,QAAA,CAAP;aAMcG,K,GAAT,YAAiB;AAAA,QACdC,EADc,GAAA,UAAA,CAAA,OAAA,CAAA,EAAA;AAAA,WAElB,SAAA,EAAA,CAAA,MAAA,IAAsB,MAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAFJ,SAEI,CAAtB,GAFkB,KAElB,GAGA,SAAA,EAAA,CAAA,MAAA,IAA0D,CAApC,CAAoC,GAApC,cAAA,CAAA,OAAA,CAAuBA,EAAAA,CAL3B,MAKI,CAAtB,GALkB,OAKlB,GAGA,SAAA,EAAA,CAAA,MAAA,IAA2D,CAArC,CAAqC,GAArC,eAAA,CAAA,OAAA,CAAwBA,EAAAA,CAR5B,MAQI,CAAtB,GARkB,QAQlB,GAGG,SAXe;;;;;;;;;;;;AApCvB,GAAA,YAAwB;AACvBb,IAAAA,OAAAA,CAAAA,MAAAA,GAAoBA,OAAAA,CAAAA,GAApBA;AADD,GAAA;;AAiCD,MAAMU,cAAAA,GAAiB,CAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAvB,SAAuB,CAAvB;AAAA,MACMC,eAAAA,GAAkB,CAAA,MAAA,EAAA,KAAA,CADxB","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react'; // eslint-disable-line\nimport ObjectInspector from 'react-object-inspector';\nimport platform from 'platform';\n\n// Capture the console.log calls (hijacking)\n(function setOldLogger() {\n  console['oldLog'] = console['log']; // eslint-disable-line dot-notation\n}());\n\n// Handle console logging\n// eslint-disable-next-line import/prefer-default-export\nexport function handleLogging(method, addToOutput) {\n  // eslint-disable-next-line no-console\n  console[method] = (...args) => {\n    try {\n      console.oldLog(`[${method}]`, ...args);\n    } catch (e) {\n      throw new Error('Terminal was loaded more than once check script tags');\n    }\n    const res = [...args].slice(0, 15).map((arg, i) => {\n      switch (typeof arg) {\n        case 'object':\n          return <ObjectInspector data={arg} key={`object-${i}`} />;\n        case 'function':\n          return `${arg}`;\n        default:\n          return arg;\n      }\n    });\n    addToOutput(res);\n  };\n  Object.defineProperty(console[method], 'name', { value: method, writable: false }); // eslint-disable-line no-console\n}\n\nexport function isServer() {\n  return !(typeof window !== 'undefined' && window.document);\n}\n\nconst linuxPlatforms = ['Ubuntu', 'Debian', 'Fedora', 'Red Hat', 'SuSE', 'Android'];\nconst darwinPlatforms = ['OS X', 'iOS'];\n\nexport function getOs() {\n  const { os } = platform;\n  if (os.family !== null && os.family.indexOf('Windows') === 0) {\n    return 'win';\n  }\n  if (os.family !== null && linuxPlatforms.indexOf(os.family) > -1) {\n    return 'linux';\n  }\n  if (os.family !== null && darwinPlatforms.indexOf(os.family) > -1) {\n    return 'darwin';\n  }\n  return 'unknown';\n}\n"]},"metadata":{},"sourceType":"script"}